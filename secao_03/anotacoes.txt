-=> Configurar a política de execução de scripts no ambiente do PowerShell:
Set-ExecutionPolicy
Restricted: Essa é a política padrão. Ela não permite a execução de scripts. Apenas comandos interativos são permitidos.
AllSigned: Nesta política, os scripts devem ser assinados digitalmente por um editor confiável antes de serem executados. Scripts não assinados ou de editores não confiáveis não serão executados.
RemoteSigned: Scripts locais podem ser executados sem assinatura, mas os scripts baixados da Internet devem ser assinados.
Unrestricted: Essa política permite a execução de qualquer script, independentemente da origem ou assinatura. Ela oferece o mínimo de restrições.
Bypass: Nenhum script é bloqueado. É a política menos segura e não é recomendada, a menos que haja uma razão válida para usá-la.
------------------------------------------------------------------------------------------------------------------------

aula_001 -=> Comentários em Python
Utilizamos o caractere # para fazer comentários em linha no Python. Esses comentários serão ignorados pelo interpretador.
------------------------------------------------------------------------------------------------------------------------

aula_001 -=> DocString
O docstring em Python é uma convenção usada para documentar funções, métodos, classes e módulos de forma a tornar o código mais legível e compreenvível para o desenvolvedor.
Entre as finalidades do DocString, as mais importantes são: documentação, ferramentas de documentação, acessibilidade e autocompletar ou sugestões.
Exemplo do uso em uma função em Python:

def somar(a, b):
    """
    Esta função recebe dois números, a e b, e retorna a soma deles.

    :param a: O primeiro número.
    :param b: O segundo número.
    :return: A soma de a e b.
    """
    return a + b
------------------------------------------------------------------------------------------------------------------------

aula_002 -=> Função print()
Argumentos nomeados:
    sep = (separador) especifica o separador a ser inserido entre os valores que você deseja imprimir;
    end = (fim de linha) define a string que será impressa no final da chamada da função;
    file = (arquivo) especifica o objeto de arquivo no qual você deseja imprimir os dados;
    flush = (descarregar) se for 'True' forçará a descarga do buffer, qo que significa que os dados serão impressos imediatamente em vez de serem armazenados em buffer.
------------------------------------------------------------------------------------------------------------------------

aula_003.py -=> Tipo primitivo de dados imutáveis (string)
str -> string -> texto
É um tipo de dado usado para representar texto. As strings são sequências de caracteres alfanuméricos e podem incluir letras, números, espaços e caracteres especiais. É um tipo de dado imutável.
Escape - utilizado para imprimir caracteres especiais em strings (\' \"...)
r - o prefixo 'r' indica que uma string deve ser tratada como uma "raw string", o que significa que caracteres de escape não são interpretados.
------------------------------------------------------------------------------------------------------------------------

aula_004.py -=> Tipo primitivo de dados imutáveis (int)
int -> integer -> inteiro
O tipo de dados int é usado para representar números inteiros. Ele pode ser positivo, negativo ou zero, mas sem casas decimais.

-=> Tipo primitivo de dados imutáveis (float)
float - flutuante - casas decimais
O tipo de dado float é usado para representar números de ponto flutuante, ou seja, números com casas decimais. Os números float podem ser positivos ou negativos.

-=> type()
A classe type() em Python é uma função incorporada que permite determinar o tipo de um objeto. Ele é útil para verificar o tipo de um objeto e, com base nessa informação, tomar decisões em seu código.
Exemplo:
type(100) # imprime <class 'int'>

aula_005.py -=> Tipo primitivo de dados imutáveis (bool)
bool - boolean - booleano
O tipo de dado bool é usado para representar valores booleanos, que podem ser 'True' (verdadeiro) ou 'False' (falso). Os valores booleanos são fundamentais em Python e são frequentemente usados para controle de fluxo, tomada de decisões e lógica em geral.

aula_006.py -=> Conversão de tipos
coerção - type convertion - typecasting - coercion
A conversão de tipos, também conhecida como coerção de tipos ou casting, é o processo de converter um valor de um tipo de dados para outro tipo em Python. Isso é útil quando você precisa realizar operações ou manipulações que envolvem diferentes tipos de dados.

aula_007.py -=> Variáveis em Python
